#define register plugin macro


#Include all m4 plugin files
M4_PLUGINS_FILES=`find $srcdir/config/ -name plugin_*.m4`

for FILE in $M4_PLUGINS_FILES; do
	echo "Loading: $FILE"	
	source $FILE
done

#Compile plugin list 
AC_MSG_CHECKING(the plugins to be compiled...)

AC_ARG_WITH(plugins,
        	AS_HELP_STRING([--with-plugins="plugin1 ... pluginN"], [Compile with the plugins listed in the argument list [default plugins="cli"]]),
 [ 
	#They provide a list of plugins
	PLUGINS=$withval
 ],[
	#Use default
	PLUGINS="cli"
	
])

AC_DEFINE(PLUGINS, $PLUGINS)
AC_MSG_RESULT($PLUGINS)

#Check if plugins do exist
for PLUGIN in $PLUGINS; do
	
	#Define plugin directory
	DIRECTORY="$srcdir/src/xdpd/management/plugins/$PLUGIN"

	#Check directory
	if ! test -d "$DIRECTORY" ; then
		AC_MSG_ERROR([Plugin [$PLUGIN]: source folder '$DIRECTORY' not found!])
	fi

	#Check M4 
	if ! test -f "$DIRECTORY/$PLUGIN.m4" ; then
		AC_MSG_ERROR([Plugin [$PLUGIN]: m4 script not found!])
	fi


	#Include plugin m4 script
	source $DIRECTORY/$PLUGIN.m4	

	#Check variables have been set
	if test -z $PLUGIN_HEADER -o -z $PLUGIN_CLASS -o -z $PLUGIN_SRCS  ; then
                AC_MSG_ERROR([Plugin [$PLUGIN]: $DIRECTORY/$PLUGIN.m4 script did not one or more of the following mandatory variables: PLUGIN_HEADER, PLUGIN_CLASS, PLUGIN_SRCS])
	fi
	
	#Add plugin to the list of PLUGIN sources
	for PLUGIN_SRC in $PLUGIN_SRCS; do
		__PLUGIN_SRCS="$__PLUGIN_SRCS plugins/$PLUGIN/$PLUGIN_SRC"
	done
	__PLUGIN_HEADERS="$__PLUGIN_HEADERS $PLUGIN_HEADER"
	__PLUGIN_CLASSES="$__PLUGIN_CLASSES $PLUGIN_CLASS"
	
	#Reset
	PLUGIN_HEADER=""
	PLUGIN_SRCS=""
	PLUGIN_CLASS=""
done

export __PLUGIN_SRCS
AC_SUBST(PLUGIN_SRCS, $__PLUGIN_SRCS)
AC_SUBST(PLUGIN_HEADERS, $__PLUGIN_HEADERS)
AC_SUBST(PLUGIN_CLASSES, $__PLUGIN_CLASSES)
AC_MSG_RESULT("PM headers: $__PLUGIN_HEADERS srcs: $PLUGIN_SRCS classes: $PLUGIN_CLASSES")

